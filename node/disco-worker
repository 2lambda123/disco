#!/usr/bin/env python
import os, sys, traceback

from disco.error import DataError
from disco.events import DataUnavailable, TaskFailed
from disco.node.worker import Worker
from disco.util import MessageWriter

def main(inputs, mode, jobname, host, master, id):
    Worker(mode,
           host=host,
           id=id,
           inputs=inputs,
           jobname=jobname,
           master=master)

if __name__ == '__main__':
    try:
        sys.stdout = MessageWriter()
        main(sys.argv[6:], *sys.argv[1:6])
    except (DataError, EnvironmentError), e:
        # check the number of open file descriptors (under proc), warn if close to max
        # http://stackoverflow.com/questions/899038/getting-the-highest-allocated-file-descriptor
        # also check for other known reasons for error, such as if disk is full
        DataUnavailable(traceback.format_exc())
        raise
    except Exception, e:
        TaskFailed(traceback.format_exc())
        raise
